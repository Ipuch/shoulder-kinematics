import numpy as np
import pytest

from .utils import TestUtils

spartacus = TestUtils.spartacus_folder()
module = TestUtils.load_module(spartacus + "/examples/export_data/compliance_report_by_author.py")
compliance_report = module.main()

expected = np.array(
    [
        ["#1", "Begon et al.", 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.0],
        ["#2", "Bourne et al.", 0, 0, 1, "-", "-", "-", 0, 1, 1, 0, 0, 0, "-", "-", "-", "-", 1, "-", "-", "-", 1],
        ["#3", "Chu et al.", 1, 0, 1, "-", "-", "-", 1, 1, 1, 1, 1, 1, "-", "-", "-", "-", 1, "-", "-", "-", 1],
        ["#4", "Fung et al.", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, "-", "-", "-", 0, "-", "-", "-", 0],
        ["#5", "Gutierrez Delgado et al.", 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, "-", "-", "-", "-", "-", "-", "-", 0],
        ["#6", "Henninger et al.", 1, 1, 1, "-", "-", "-", 1, 1, 1, 1, 1, 1, "-", "-", "-", "-", 1, 1, 1, 1, 1.0],
        ["#7", "Karduna et al.", 0, 0, 0, "-", "-", "-", 0, 0, 0, 0, 1, 0, "-", "-", "-", "-", 1, "-", "-", "-", 1],
        ["#8", "Kijima et al.", 0, 0, 0, "-", "-", "-", 0, 0, 0, 0, 0, 1, "-", "-", "-", "-", 0, "-", 0, 1, 0],
        ["#9", "Kim et al.", 0, 0, 0, "-", "-", "-", 0, 0, 0, 0, 0, 1, "-", "-", "-", "-", 0, "-", "-", "-", 0],
        ["#10", "Kozono et al.", 0, 0, 0, "-", "-", "-", 0, 1, 1, 0, 1, 1, "-", "-", "-", "-", "-", "-", 0, 1, 0.0],
        ["#11", "Ludewig et al.", 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, "-", 1, "-", 1, "-", 0, "-", 1],
        ["#12", "Matsuki et al.", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, "-", "-", "-", 0, "-", 0, 1, 0],
        ["#13", "Matsumura et al.", 1, 1, 1, "-", "-", "-", 1, 1, 1, 1, 1, 1, "-", "-", "-", "-", 1, "-", "-", "-", 1],
        ["#14", "Moissenet et al.", 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, "-", 0, 0, 1],
        ["#15", "Nishinaka et al.", 0, 0, 0, "-", "-", "-", 0, 0, 0, 0, 0, 1, "-", "-", "-", "-", "-", "-", "-", 1, 0],
        ["#16", "Oki et al.", 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, "-", "-", "-", 1, "-", "-", "-", 1],
        ["#17", "Sahara et al.", 0, 0, 0, 0, 0, 0, 0, 0, 0, "-", "-", "-", 0, "-", 0, 1, "-", "-", "-", "-", 0],
        ["#18", "Sugi et al.", 0, 0, 0, "-", "-", "-", 0, 0, 0, 0, 0, 1, "-", "-", "-", "-", 0, "-", 0, 1, 0],
        ["#19", "Teece et al.", 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, "-", "-", 1, "-", "-", "-", "-", "-", 1],
        ["#20", "Yoshida et al.", 1, 1, 1, "-", "-", "-", 1, 1, 1, 1, 1, 1, "-", "-", "-", "-", 1, "-", 0, "-", 1],
    ],
    dtype=object,
)


@pytest.mark.parametrize("line", [i for i in range(len(compliance_report))])
def test_report(line):
    np.testing.assert_array_equal(compliance_report.iloc[line].values, np.array(expected[line], dtype=object))
